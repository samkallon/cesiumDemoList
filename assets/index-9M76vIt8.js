var m;(function(t){t.bottom="bottom",t.bottomLeft="bottom-left",t.bottomRight="bottom-right",t.left="left",t.none="none",t.right="right",t.top="top",t.topLeft="top-left",t.topRight="top-right",t.outside="outside",t.inside="inside"})(m||(m={}));function s(t){return typeof t=="number"}let f=Math.random;function c(){return h(f(),0,1-Number.EPSILON)}function h(t,n,a){return Math.min(Math.max(t,n),a)}function g(t){const n=l(t),a=0;let e=p(t);return n===e&&(e=a),c()*(n-e)+e}function u(t){return s(t)?t:g(t)}function p(t){return s(t)?t:t.min}function l(t){return s(t)?t:t.max}const x=2,o={x:0,y:0};function b(t){const{context:n,particle:a,radius:e}=t,r=a.sides,d=a.starInset??x;n.moveTo(o.x,o.y-e);for(let i=0;i<r;i++)n.rotate(Math.PI/r),n.lineTo(o.x,o.y-e*d),n.rotate(Math.PI/r),n.lineTo(o.x,o.y-e)}const I=2,S=5;class y{constructor(){this.validTypes=["star"]}draw(n){b(n)}getSidesCount(n){const a=n.shapeData;return Math.round(u((a==null?void 0:a.sides)??S))}particleInit(n,a){const e=a.shapeData;a.starInset=u((e==null?void 0:e.inset)??I)}}async function R(t,n=!0){t.checkVersion("3.8.1"),await t.addShape(new y,n)}export{R as loadStarShape};
