var y;(function(t){t.bottom="bottom",t.bottomLeft="bottom-left",t.bottomRight="bottom-right",t.left="left",t.none="none",t.right="right",t.top="top",t.topLeft="top-left",t.topRight="top-right",t.outside="outside",t.inside="inside"})(y||(y={}));function O(t){return typeof t=="number"}function x(t){return Array.isArray(t)}let _=Math.random;function C(){return z(_(),0,1-Number.EPSILON)}function z(t,n,e){return Math.min(Math.max(t,n),e)}function P(t){return O(t)?t:t.max}var v;(function(t){t.auto="auto",t.increase="increase",t.decrease="decrease",t.random="random"})(v||(v={}));var j;(function(t){t.increasing="increasing",t.decreasing="decreasing"})(j||(j={}));var w;(function(t){t.none="none",t.max="max",t.min="min"})(w||(w={}));var b;(function(t){t.bottom="bottom",t.left="left",t.right="right",t.top="top"})(b||(b={}));var S;(function(t){t.precise="precise",t.percent="percent"})(S||(S={}));var I;(function(t){t.max="max",t.min="min",t.random="random"})(I||(I={}));function R(t,n){return t===n||x(n)&&n.indexOf(t)>-1}async function E(t,n){try{await document.fonts.load(`${n??"400"} 36px '${t??"Verdana"}'`)}catch{}}function T(t){return Math.floor(C()*t.length)}function B(t,n,e=!0){return t[n!==void 0&&e?n%t.length:T(t)]}function F(t,n){return x(t)?t.map((r,o)=>n(r,o)):n(t,0)}function K(t,n,e){return x(t)?B(t,n,e):t}function N(t,n){if(t.version!==n)throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${t.version}. Plugins version: ${n}`)}function L(t,n){const{context:e,opacity:r}=t,o=.5,s=e.globalAlpha;if(!n)return;const i=n.width,c=i*o;e.globalAlpha=r,e.drawImage(n,-c,-c,i,i),e.globalAlpha=s}const g='"Twemoji Mozilla", Apple Color Emoji, "Segoe UI Emoji", "Noto Color Emoji", "EmojiOne Color"',A=0;class k{constructor(){this.validTypes=["emoji"],this._emojiShapeDict=new Map}destroy(){for(const[n,e]of this._emojiShapeDict)e instanceof ImageBitmap&&(e==null||e.close()),this._emojiShapeDict.delete(n)}draw(n){const e=n.particle.emojiDataKey;if(!e)return;const r=this._emojiShapeDict.get(e);r&&L(n,r)}async init(n){const e=n.actualOptions,{validTypes:r}=this;if(!r.find(i=>R(i,e.particles.shape.type)))return;const o=[E(g)],s=r.map(i=>e.particles.shape.options[i]).find(i=>!!i);s&&F(s,i=>{i.font&&o.push(E(i.font))}),await Promise.all(o)}particleDestroy(n){n.emojiDataKey=void 0}particleInit(n,e){const o=e.shapeData;if(!(o!=null&&o.value))return;const s=K(o.value,e.randomIndexData);if(!s)return;const i=typeof s=="string"?{font:o.font??g,padding:o.padding??A,value:s}:{font:g,padding:A,...o,...s},c=i.font,u=i.value,m=`${u}_${c}`;if(this._emojiShapeDict.has(m)){e.emojiDataKey=m;return}const $=i.padding*2,p=P(e.size.value),d=p+$,l=d*2;let h;if(typeof OffscreenCanvas<"u"){const f=new OffscreenCanvas(l,l),a=f.getContext("2d");if(!a)return;a.font=`400 ${p*2}px ${c}`,a.textBaseline="middle",a.textAlign="center",a.fillText(u,d,d),h=f.transferToImageBitmap()}else{const f=document.createElement("canvas");f.width=l,f.height=l;const a=f.getContext("2d");if(!a)return;a.font=`400 ${p*2}px ${c}`,a.textBaseline="middle",a.textAlign="center",a.fillText(u,d,d),h=f}this._emojiShapeDict.set(m,h),e.emojiDataKey=m}}async function D(t,n=!0){N(t,"3.7.1"),await t.addShape(new k,n)}export{D as loadEmojiShape};
